// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package database

import (
	"github.com/jake-hansen/agora/config"
	"github.com/jake-hansen/agora/log"
)

// Injectors from injector.go:

func Build() (*Manager, func(), error) {
	viper := config.Provide()
	zapConfig := log.Cfg(viper)
	logLog, cleanup, err := log.Provide(zapConfig)
	if err != nil {
		return nil, nil, err
	}
	databaseConfig, err := Cfg(viper, logLog)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	db, cleanup2, err := ProvideGORM(databaseConfig)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	manager, err := Provide(databaseConfig, db)
	if err != nil {
		cleanup2()
		cleanup()
		return nil, nil, err
	}
	return manager, func() {
		cleanup2()
		cleanup()
	}, nil
}

func BuildTest(cfg Config) (*MockManager, func(), error) {
	databaseConfig, err := CfgTest(cfg)
	if err != nil {
		return nil, nil, err
	}
	mockManager, cleanup, err := ProvideMock(databaseConfig)
	if err != nil {
		return nil, nil, err
	}
	return mockManager, func() {
		cleanup()
	}, nil
}
