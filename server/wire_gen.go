// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package server

import (
	"github.com/jake-hansen/agora/api/handlers"
	"github.com/jake-hansen/agora/api/middleware"
	"github.com/jake-hansen/agora/config"
	"github.com/jake-hansen/agora/router"
)

// Injectors from injector.go:

func Build() (*Server, func(), error) {
	viper := config.Provide()
	serverConfig, err := Cfg(viper)
	if err != nil {
		return nil, nil, err
	}
	v := middleware.ProvideAllProductionMiddleware()
	v2, cleanup, err := handlers.ProvideAllProductionHandlers()
	if err != nil {
		return nil, nil, err
	}
	routerConfig, err := router.Cfg(viper, v, v2)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	routerRouter := router.Provide(routerConfig)
	server := Provide(serverConfig, routerRouter)
	return server, func() {
		cleanup()
	}, nil
}
